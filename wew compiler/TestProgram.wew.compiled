call main
halt
_addtwo NOP
PUSH @LSTK
MOV @STK @LSTK
PUSH [@lstk+2]
PUSH [@lstk+1]
POP @ACC
POP @EAX
ADD @EAX
PUSH @ACC
POP @ACC
MOV @ACC [@lstk+2]
MOV [@lstk+2] @RET
MOV @LSTK @STK
MOV [@STK] @LSTK
MOV @STK @ACC
ADD 3
MOV @ACC @STK
RET
MOV 0 @RET
MOV @LSTK @STK
MOV [@STK] @LSTK
MOV @STK @ACC
ADD 3
MOV @ACC @STK
RET
_comparenums NOP
PUSH @LSTK
MOV @STK @LSTK
PUSH 2
CALL addtwo [@lstk-1] [@lstk-1]
MOV @STK @ACC
ADD 0
MOV @ACC @STK
PUSH @RET
POP @ACC
MOV @ACC [@lstk-1]
PUSH [@lstk-1]
PUSH [@lstk+2]
POP @ACC
POP @EAX
MUL @EAX
PUSH @ACC
POP @ACC
MOV @ACC [@lstk+2]
CMP [@lstk+2] [@lstk+1]
meje jump_end_0
MOV [@lstk+1] @RET
MOV @LSTK @STK
MOV [@STK] @LSTK
MOV @STK @ACC
ADD 3
MOV @ACC @STK
RET
_jump_end_0 NOP
MOV [@lstk+2] @RET
MOV @LSTK @STK
MOV [@STK] @LSTK
MOV @STK @ACC
ADD 3
MOV @ACC @STK
RET
MOV 0 @RET
MOV @LSTK @STK
MOV [@STK] @LSTK
MOV @STK @ACC
ADD 3
MOV @ACC @STK
RET
_main NOP
PUSH @LSTK
MOV @STK @LSTK
PUSH 0
CALL comparenums 1 2
MOV @STK @ACC
ADD 0
MOV @ACC @STK
PUSH @RET
CALL comparenums [@STK+1] 10
MOV @STK @ACC
ADD 1
MOV @ACC @STK
PUSH @RET
POP @ACC
MOV @ACC [@lstk-1]
MOV 0 @RET
MOV @LSTK @STK
MOV [@STK] @LSTK
MOV @STK @ACC
ADD 1
MOV @ACC @STK
RET